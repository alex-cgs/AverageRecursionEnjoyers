#import "./project_contract_v1.jsligo" "Pr"
#import "./transport_contract_v1.jsligo" "Tr"

const test_code = (): unit => {

    /** Importing all the types from Project_Contract */
    type buyer = Pr.Project_Contract.buyer;
    type deadline = Pr.Project_Contract.deadline;
    type the_best_seller = Pr.Project_Contract.the_best_seller;
    type contract = Pr.Project_Contract.contract;
    type contract_chain = Pr.Project_Contract.contract_chain;
    type storage = contract_chain;
    type result = [list<operation>,storage];

    /** Importing from Transport_Contract */

    /** Setting up the addresses of buyer, seller and transport*/
    let buyer0Addr = Test.nth_bootstrap_account(0);
    let seller0Addr = Test.nth_bootstrap_account(1);

    /** Creating some deadlines for the contract and the transport*/
    deadline ctDeadline = "2025-01-01t10:10:10Z";
    deadline trDeadline = "2035-01-01t10:10:10Z";

    deadline today = Tezos.get_now();

    buyer buyer0 = {
        address : buyer0Addr,
        location : "Delhaize",
        object : "Croissant",
        price : 3
    }

    the_best_seller seller0 = {
        address : seller0Addr,
        location : "La Provencale",
        object : "Croissant",
        cost : 3,
        contract_deadline : ctDeadline,
    }

    /** 
    contract contract0 = {
        seller : seller0,
        contract_deadline : ctDeadline,
        transport_deadline : trDeadline
    } */

    let test_map : map<int, contract> = Map.empty;
    Map.add(0, contract0, test_map);

    let contr = Test.originate(contract_of(Pr.Project_Contract), [test_map, 0], 0tez);
    let p0 : parameter_of Pr.Project_Contract = OpenContract(buyer0.address, buyer0.location, buyer0.object, buyer0.price);
    let p1 : parameter_of Pr.Project_Contract = Participate();
    let p2 : parameter_of Pr.Project_Contract = Verify();
    let p3 : parameter_of Pr.Project_Contract = CloseContract();

    Test.transfer_exn(contr.addr, p0, 1mutez);
    Test.transfer_exn(contr.addr, p1, 1mutez);

    const final = Map.literal (list([]))


}