#import "./transport_contract_v1.jsligo" "Tr"

export namespace Project_Contract {
    export type buyer = { 
        address : address,
        location : string,
        object : string, 
        price : nat
    };

    export type deadline = timestamp;

    export type the_best_seller = {
        address : address, 
        location : string, 
        object : string, 
        cost : nat, 
        transport_contract : Tr.Transport_Contract.order
    }

    export type contract = {
        buyer : buyer,
        seller : the_best_seller,
        contract_deadline : deadline;
        object_deadline : deadline;
    }

    export type contract_chain = list<contract>; // What's better list / map ? 

    export type storage = contract_chain;

    /* Functions: 
        1. OpenContract(buyer: address, location, object, price)
        2. Participate(seller: address, location, object, cost) :
            2.a first check if both objects are the same
            2.b Create a transport order
            2.c After closing transport order, get the feedback 
        3. CloseContrace(buyer: address) : If the buyer wants to close the contract befor the deadline
        
    */

}