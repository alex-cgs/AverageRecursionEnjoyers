export namespace IncDec {
  export type storage = int;
  type ret = [list<operation>, storage];
  
  // Three entrypoints

  @entry
  const increment = (delta: int, store: storage): ret =>
    [list([]), store + delta];
  @entry
  const decrement = (delta: int, store: storage): ret =>
    [list([]), store - delta];
  @entry
  const reset = (_: unit, _s: storage): ret => [list([]), 0]
};

/* Tests for main access point */

const test_initial_storage =
  (
    () => {
      let initial_storage = 42;
      let contract = Test.originate(contract_of (IncDec), initial_storage, 0 as tez);
      return assert(Test.get_storage(contract.addr) == initial_storage)
    }
  )();

const test_increment =
  (
    () => {
      let initial_storage = 42;
      let contract  = Test.originate(contract_of (IncDec), initial_storage, 0 as tez);
      Test.transfer_exn(contract.addr, (Increment (1)), 1mutez);
      return assert(Test.get_storage(contract.addr) == initial_storage + 1)
    }
  )();