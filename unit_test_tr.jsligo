#import "./transport_contract_v1.jsligo" "Tr"

const test_code = (): unit => {

    type order = Tr.order;
    type order_id = Tr.order_id;
    type last_id = Tr.last_id;
    type storage = Tr.storage;
    type result = Tr.result;  
    type deadline = timestamp;

    let buyer0Addr = Test.nth_bootstrap_account(0);
    let transport0Addr = Test.nth_bootstrap_account(1);

    let ctDeadline : deadline = Tezos.get_now();
    let trDeadline : deadline = Tezos.get_now();

    /** ASSUMING we have parsed the data from the Project Contract thingy, then */
    let order0 : order = {
        buyer_address : buyer0Addr,
        origin : "Delhaize",
        destination : "La Provencale",
        contract_deadline : ctDeadline,
        transport_deadline : trDeadline,
        winner_address : transport0Addr,
        winner_price : 20n
    }

    /** Create Contract */
    /** Assert */
    /** Participate */
    /** Assert */
    /** GetTheOrderData */
    /** Assert */
    /** Close Contract */
    /** Assert */

    let test_map : storage = Map.empty;
    test_map[1] = 1;
    test_map[0] = Map.literal(list(["0", order0]));

    let contr = Test.originate(contract_of(Tr), [test_map, 0n], 0tez);
    let p1 : parameter_of Tr = CreateContract(order0);

    Test.transfer_exn(contr.addr, p1, 1mutez);

    const final = Map.literal (list([
        [0n,order0],
    ]));
    let _unit_ = Test.log(Test.get_storage(contr.addr))
    return (assert (Test.equal(Test.get_storage(contr.addr), [final,1n])));

}

const test = test_code();